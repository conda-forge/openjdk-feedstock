{% set version = "21.0.5" %}
{% set openjdk_revision = "11" %}
{% set zulu_build = "21.38.21-ca" %}

{% set major = version.split(".")[0] %}
{% set jdk_full = version ~ "+" ~ openjdk_revision %}

{% set temurin_url = "https://github.com/adoptium/temurin" ~ major ~ "-binaries/releases/download" %}
{% set temurin_base =  "jdk-" ~ jdk_full ~ "/OpenJDK" ~ major ~ "U-jdk" %}
{% set temurin_suffix = "linux_hotspot_" ~ jdk_full.replace("+", "_") ~ ".tar.gz" %}

{% set zulu_url = "https://cdn.azul.com/zulu/bin" %}
{% set zulu_base = "zulu" ~ zulu_build ~ "-jdk" ~ version %}

package:
  name: openjdk
  version: {{ version }}


source:
  # example of full url for version=17.0.8 & openjdk_revision=7:
  # https://github.com/adoptium/temurin17-binaries/releases/download/jdk-17.0.8+7/OpenJDK17U-jdk_x64_linux_hotspot_17.0.8_7.tar.gz
  - url: {{ temurin_url }}/{{ temurin_base }}_x64_{{ temurin_suffix }}        # [build_platform == "linux-64"]
    sha256: 3c654d98404c073b8a7e66bffb27f4ae3e7ede47d13284c132d40a83144bfd8c  # [build_platform == "linux-64"]
  # native compilation: currently unused
  - url: {{ temurin_url }}/{{ temurin_base }}_aarch64_{{ temurin_suffix }}    # [build_platform == "linux-aarch64"]
    sha256: 980156d37580bd6fec142e02900497984e94c4b819a0c0eb7ce790bfc7c7d920  # [build_platform == "linux-aarch64"]
  - url: {{ temurin_url }}/{{ temurin_base }}_ppc64le_{{ temurin_suffix }}    # [build_platform == "linux-ppc64le"]
    sha256: 45dde71faf8cbb78fab3c976894259655c8d3de827347f23e0ebe5710921dded  # [build_platform == "linux-ppc64le"]

  - url: https://github.com/openjdk/jdk{{ major }}u/archive/refs/tags/jdk-{{ jdk_full }}.tar.gz                 # [linux]
    sha256: 8d57ea0ba57310fffb9257d8018e54a264d940c472228eb04d37a21b584885ac  # [linux]
    folder: src                                                               # [linux]
  - url: https://github.com/dejavu-fonts/dejavu-fonts/releases/download/version_2_37/dejavu-fonts-ttf-2.37.zip  # [linux]
    sha256: 7576310b219e04159d35ff61dd4a4ec4cdba4f35c00e002a136f00e96a908b0a  # [linux]
    folder: fonts                                                             # [linux]

  # example of full url for zulu_build=17.44.15-ca & version=17.0.8:
  # https://cdn.azul.com/zulu/bin/zulu17.44.15-ca-jdk17.0.8-macosx_x64.zip
  - url: {{ zulu_url }}/{{ zulu_base }}-macosx_x64.zip                        # [osx and x86_64]
    sha256: a77a9c67d8f9a2341674bcea7056d9d70f69ff0850dd3874303641cc9cec2dfc  # [osx and x86_64]
  - url: {{ zulu_url }}/{{ zulu_base }}-macosx_aarch64.zip                    # [osx and arm64]
    sha256: d5c289ce2c8c67f414ede3b170dea72ca9a1322520498325a51d83bbaa94d1f0  # [osx and arm64]
  - url: {{ zulu_url }}/{{ zulu_base }}-win_x64.zip                           # [win64]
    sha256: 8dea44fd3a6f7ad0f42f38abc1371075710b58bed9bd8f093c2ef2d450dd2672  # [win64]

build:
  number: 1
  # Binaries are already relocatable and conda-build's post-processing would add a very long RPATH to binaries
  # which doesn't fit anymore into the __LINKEDIT section. For this, we either need to manually reassemble
  # the Mach-O header or build everything from source.
  binary_relocation: false  # [osx]
  ignore_run_exports:
    # the produced artefacts still need libc++.*.dylib on osx,
    # but the one in the platform sdk is enough; avoid extra run-export
    - libcxx  # [osx]

requirements:
  build:
    # We also need a compiler on osx to produce correct signatures
    - {{ compiler('cxx') }}   # [not win]
    - {{ stdlib('c') }}       # [linux]
    - pkg-config        # [linux]
    - autoconf          # [linux]
    - unzip             # [linux]
    - zip               # [linux]
    - make              # [linux]
    - zlib              # [linux and (build_platform != target_platform)]
    - freetype          # [linux and (build_platform != target_platform)]
    - harfbuzz          # [linux and (build_platform != target_platform)]
    - libpng            # [linux and (build_platform != target_platform)]
    - giflib            # [linux and (build_platform != target_platform)]
    - harfbuzz          # [linux and (build_platform != target_platform)]
    - libjpeg-turbo     # [linux and (build_platform != target_platform)]
    - libcups           # [linux and (build_platform != target_platform)]
    - alsa-lib          # [linux and (build_platform != target_platform)]
    - fontconfig        # [linux and (build_platform != target_platform)]
    - xorg-libx11       # [linux and (build_platform != target_platform)]
    - xorg-libxext      # [linux and (build_platform != target_platform)]
    - xorg-libxt        # [linux and (build_platform != target_platform)]
    - xorg-libxtst      # [linux and (build_platform != target_platform)]
    - xorg-libxrender   # [linux and (build_platform != target_platform)]
    - xorg-libxrandr    # [linux and (build_platform != target_platform)]
    - xorg-libxi        # [linux and (build_platform != target_platform)]
    - lcms2             # [linux and (build_platform != target_platform)]
    - symlink-exe-build  # [win]
    - m2-bash            # [win]
  host:
    - zlib              # [linux or osx]
    - freetype          # [linux]
    - harfbuzz          # [linux]
    - libpng            # [linux]
    - giflib            # [linux]
    - harfbuzz          # [linux]
    - libjpeg-turbo     # [linux]
    - libcups           # [linux]
    - alsa-lib          # [linux]
    - fontconfig        # [linux]
    - xorg-libx11       # [linux]
    - xorg-libxext      # [linux]
    - xorg-libxt        # [linux]
    - xorg-libxtst      # [linux]
    - xorg-libxrender   # [linux]
    - xorg-libxrandr    # [linux]
    - xorg-libxi        # [linux]
    - lcms2             # [linux]
    - vc14_runtime      # [win]
  run:
    - xorg-libx11       # [linux]
    - xorg-libxext      # [linux]
    - xorg-libxtst      # [linux]
    - xorg-libxrender   # [linux]
    - xorg-libxi        # [linux]
    - vc14_runtime      # [win]

test:
  requires:
    - {{ compiler('c') }}  # [not win]
  files:
    - test-jni  # [not win]
    - test-jni.sh  # [not win]
    - test-nio
  commands:
    - java -version
    - '${JAVA_HOME}/bin/java -version'  # [not win]
    - '%JAVA_HOME%\bin\java -version'   # [win]
    - ./test-jni.sh  # [not win and not ppc64le]
    - test -f ${JAVA_HOME}/release              # [not win]
    - if not exist %JAVA_HOME%\\release exit 1  # [win]

about:
  home: https://www.azul.com/products/zulu/  # [not linux]
  home: https://openjdk.java.net             # [linux]
  license: GPL-2.0-or-later WITH Classpath-exception-2.0
  license_family: GPL
  license_file:
    - LICENSE
    - fonts/LICENSE   # [linux]
  summary: The Zulu OpenJDK build.           # [not linux]
  summary: An open-source implementation of the JDK   # [linux]
  description: Zulu OpenJDK is an open source build of the Java JDK.   # [not linux]

extra:
  recipe-maintainers:
    - johanneskoester
    - sodre
    - mingwandroid
    - CJ-Wright
    - xhochy
    - izahn
    - h-vetinari
